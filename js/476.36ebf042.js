(self["webpackChunk_zazuko_spex"]=self["webpackChunk_zazuko_spex"]||[]).push([[476],{67476:function(e,t,i){if("function"!==typeof queueMicrotask){let e=Promise.resolve();try{queueMicrotask=t=>e.then(t).catch((e=>setTimeout((()=>{throw e}),0)))}catch(a){}}const r=i(42084),s=i(7404),_=/^([A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u{02ff}\u{0370}-\u{037d}\u{037f}-\u{1fff}\u{200c}-\u{200d}\u{2070}-\u{218f}\u{2c00}-\u{2fef}\u{3001}-\u{d7ff}\u{f900}-\u{fdcf}\u{fdf0}-\u{fffd}\u{10000}-\u{effff}]([A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u{02ff}\u{0370}-\u{037d}\u{037f}-\u{1fff}\u{200c}-\u{200d}\u{2070}-\u{218f}\u{2c00}-\u{2fef}\u{3001}-\u{d7ff}\u{f900}-\u{fdcf}\u{fdf0}-\u{fffd}\u{10000}-\u{effff}_\-0-9\xb7\u{0300}-\u{036f}\u{203f}-\u{2040}.]*[A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u{02ff}\u{0370}-\u{037d}\u{037f}-\u{1fff}\u{200c}-\u{200d}\u{2070}-\u{218f}\u{2c00}-\u{2fef}\u{3001}-\u{d7ff}\u{f900}-\u{fdcf}\u{fdf0}-\u{fffd}\u{10000}-\u{effff}_\-0-9\xb7\u{0300}-\u{036f}\u{203f}-\u{2040}])?)?$/u,n=1,f=2,o=4;class c extends s{constructor(e={}){super(e);let{prefixes:t={},lists:i=null,debug:s=!1,style:c=null}=e;Object.assign(this,{_b_debug:s,_s_indent:"\t",_b_simplify_default_graph:!1,_xc_directives:0,_s_token_prefix:"@prefix"});let a="";if(c){let e=c.graph_keyword||c.graphKeyword||c["graph-keyword"];if(e)if(!0===e)a="GRAPH ";else{if("string"!==typeof e)throw new TypeError(`Invalid argument type given for 'graph' token: ${e}`);if(!/^graph$/i.test(e))throw new Error(`Graph token must equal case-insensitive "GRAPH"; found: "${e}"`);a=e+" "}let t=c.simplify_default_graph||c.simplifyDefaultGraph||c["simplify-default-graph"];t&&(this._b_simplify_default_graph=!!t),c.indent&&(this._s_indent=c.indent.replace(/[^\s]/g,""));let i=c.directives||c.directives;if(i)switch(i){case"sparql":this._xc_directives=n,this._s_token_prefix="prefix";break;case"Sparql":this._xc_directives=n|f,this._s_token_prefix="Prefix";break;case"SPARQL":this._xc_directives=n|o,this._s_token_prefix="PREFIX";break;case"turtle":break;case"Turtle":this._xc_directives=f,this._s_token_prefix="@Prefix";break;case"TURTLE":this._xc_directives=o,this._s_token_prefix="@PREFIX";break;default:throw new Error(`Value not understood for 'directives' option: ${i}`)}}this._s_graph_keyword=a,i&&(this._serialize_list_object=function(e,t){let i=this._transcode_list(e);return this._encode_objects(i,t)});let l=this._s_token_prefix,u=this._xc_directives&n?"\n":" .\n",h="";try{for(let e in t){if(!_.test(e))throw new Error(`Invlalid prefix id for application/trig RDF serialization format: '${e}'`);h+=`${l} ${e}: ${r.namedNode(t[e]).verbose()}${u}`}}catch(p){queueMicrotask((()=>{this.emit("error",p)}))}h&&this.push(h)}_serialize_prefixes(e){let t=2===this._xc_state?"\n\n":"";this._xc_state=0,this._h_prefixes={...this._h_prefixes};let i=this._s_token_prefix,s=this._xc_directives&n?"\n":" .\n";for(let n in e){if(!_.test(n))throw new Error(`Invlalid prefix id for application/trig RDF serialization format: '${n}'`);t+=`${i} ${n}: ${r.namedNode(e[n]).verbose()}${s}`,this._h_prefixes[n]=e[n]}return r.cache_prefixes(this._h_prefixes),t}_serialize_c3(e){let{_h_prefixes:t,_s_indent:i}=this,s=2!==this._xc_state?"\n":"";this._xc_state=2;let _="",n=null;for(let f in e){if("`"===f[0]){let t=this._apply_directive(f,e[f]);t.write&&(s+=_+t.write,_=""),t.exit&&(n=t.exit);continue}let o=s.length;s+=_+r.c1_node(f,t).terse(t)+" ";let c="",a="",l=e[f],u=s.length,h=!0,p=null;for(let e in l){if("`"===e[0]){let t=this._apply_directive(e,l[e]);t.write&&(s+=(c?a:"\n")+i+t.write,a="",c=i),t.exit&&(p=t.exit);continue}let _=l[e],n=this._encode_objects(_);if(!n)continue;if(h=!1,"_"===e[0]&&":"===e[1])throw new Error(`Cannot use blank node in predicate position of c3 hash; subject:'${f}', predicate:'${e}'`);let o=r.c1_named_node(e,t),u=o.isRdfTypeAlias?"a":o.terse(t);s+=a+c+u+" "+n,this._xc_state=2,a=" ;\n",c=i,p&&p()}h?s=s.slice(0,o)+s.slice(u):(_="\n",s+=`${a?" ":c}.\n`,n&&n())}return s+="\n",s}_serialize_c4(e){let{_h_prefixes:t,_s_indent:i}=this,s=2!==this._xc_state?"\n":"";this._xc_state=2;let _=this._b_simplify_default_graph,n=this._s_graph_keyword,f=null;for(let o in e){if("`"===o[0]){let t=this._apply_directive(o,e[o]);t.write&&(s+=t.write),t.exit&&(f=t.exit);continue}let c=r.c1_node(o,t).terse(t);s+=c?n+c+" {\n":_?"":n+"{\n";let a=!c&&_?"":i;this._xc_state=2;let l=e[o],u="",h=null;for(let e in l){if("`"===e[0]){let t=this._apply_directive(e,l[e]);t.write&&(s+=u+a+t.write,u=""),t.exit&&(h=t.exit);continue}let _=s.length;s+=u+a+r.c1_node(e,t).terse(t)+" ";let n="",f="",c=l[e],p=s.length,d=!0,x=null;for(let l in c){if("`"===l[0]){let e=this._apply_directive(l,c[l]);e.write&&(s+=(n?f:"\n")+i+a+e.write,f="",n=i+a),e.exit&&(x=e.exit);continue}let _=c[l],u=this._encode_objects(_);if(!u)continue;if(d=!1,"_"===l[0]&&":"===l[1])throw new Error(`Cannot use blank node in predicate position of c4 hash; graph:'${o}', subject:'${e}', predicate:'${l}'`);let h=r.c1_named_node(l,t),p=h.isRdfTypeAlias?"a":h.terse(t);s+=f+n+p+" "+u,this._xc_state=2,f=" ;\n",n=i+a,x&&x()}d?s=s.slice(0,_)+s.slice(p):(u="\n",s+=`${f?" ":n}.\n`,h&&h())}s+=(c||!_?"}\n":"")+"\n",f&&f()}return s}_encode_objects(e,t=1){let{_h_prefixes:i,_s_indent:s,_hm_coercions:_}=this;switch(typeof e){case"string":return r.c1(e,i).terse(i);case"number":return r.number(e).terse(i);case"boolean":return r.boolean(e).terse(i);case"object":if(null===e)throw new Error("Refusing to serialize null value given as an object of quad");if(Array.isArray(e)||e instanceof Set){let i="",r="";for(let s of e)Array.isArray(s)?i+=r+this._serialize_list_object(s,t):i+=r+this._encode_objects(s,t),r=", ";return i}if(Object===e.constructor){let _="[",n=!0,f=null;for(let o in e)if(n=!1,_+="\n"+s.repeat(2+t),"`"!==o[0])_+=r.c1(o,i).terse(i)+" "+this._encode_objects(e[o],t+1)+" ;";else{let t=this._apply_directive(o,e[o]);t.write&&(_+=t.write),t.exit&&(f=t.exit)}return _+=(n?"":"\n"+s.repeat(1+t))+"]",f&&f(),_}if(_.has(e.constructor)){let r=_.get(e.constructor).apply(this,[e,t]);return r.terse(i)}if(e.isGraphyTerm)return e.terse(i);if(e.termType)return r.from.term(e).terse(i);default:throw new Error(`Bad type for RDF object: [${typeof e}] ${e?e.constructor:e}`)}}_serialize_collection_object(e,t){let i=this._s_indent,r="(";for(let s of e){let e="";e=Array.isArray(s)?this._serialize_collection_object(s,t+1):this._encode_objects(s,t+1),r+="\n"+i.repeat(2+t)+e}return e.length&&(r+="\n"+i.repeat(1+t)),r+=")",r}_serialize_quad(e){let t=this._h_prefixes,i=r.from.quad(e),s=i.graph.terse(t);this._s_push+=(2!==this._xc_state?"\n":"")+this._s_graph_keyword+(s?s+" ":"")+"{\n\t"+i.subject.terse(t)+" "+i.predicate.terse(t)+" "+i.object.terse(t)+" .\n}\n\n",this._xc_state=2}}Object.assign(c.prototype,{anonymous_blank_nodes:!0,_serialize_c3r:c.prototype._serialize_c3,_serialize_c4r:c.prototype._serialize_c4,_serialize_comment:s.prototype._serialize_hash_comment,_serialize_list_object:c.prototype._serialize_collection_object}),e.exports=function(e){return new c(e)}}}]);
//# sourceMappingURL=476.36ebf042.js.map
import{J as L,p as X}from"./index-BRQbOmme.js";import{r as S}from"./main-B2XjL05y.js";function A(h,m){for(var p=0;p<m.length;p++){const d=m[p];if(typeof d!="string"&&!Array.isArray(d)){for(const l in d)if(l!=="default"&&!(l in h)){const x=Object.getOwnPropertyDescriptor(d,l);x&&Object.defineProperty(h,l,x.get?x:{enumerable:!0,get:()=>d[l]})}}}return Object.freeze(Object.defineProperty(h,Symbol.toStringTag,{value:"Module"}))}var D,N;function q(){if(N)return D;N=1;const h=L(),m=S(),{c1:p,namedNode:d,$_PREFIX_CACHE:l}=h,x=/[&"<>']/g,z={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;"},$=/^xml/i,f=c=>c.replace(x,r=>z[r]),M=/([A-Za-z_][A-Za-z_.0-9-]*)$/,v=/([A-Za-z_\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u{10000}-\u{EFFFF}][A-Za-z_.0-9\-\u00b7\u203f-\u2040\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u{10000}-\u{EFFFF}]*$)/u;function w(c,r,i,e){if(e.isNamedNode)i+=' rdf:resource="'+f(e.value)+'"/>';else if(e.isLiteral)e.isLanguaged?i+=' xml:lang="'+e.language+'"':e.isDatatyped&&(i+=' rdf:datatype="'+f(e.datatype.value)+'"'),i+=">"+f(e.value)+"</"+r+">";else if(e.isBlankNode)i+=' rdf:nodeID="'+f(e.value)+'"/>';else throw new Error(`Not allowed to serialize term type '${e.termType}' as object in XML serializer.`);return i}function y(c,r){let i=c._h_prefixes,e=r.value,u,t;{let n=M.exec(e);if(n)u=e.slice(0,n.index),t=n[1];else if(n=v.exec(e),n)u=e.slice(0,n.index),t=n[1];else throw new Error(`Cannot serialize predicate <${e}> into an XML qname`)}let s,o;e:for(;;){t:for(;;)if(i[l]){let a=i[l]._h_inverse;if(u in a){let _=a[u];s=(_?_+":":"")+t,o="<"+s;break e}else break}else{for(let a in i)if(i[a]===u){s=(a?a+":":"")+t,o="<"+s;break t}break}let n="__g"+c._c_prefixes_tmp++;s=n+":"+t,o="<"+s+" xmlns:"+n+'="'+u+'"';break}return[s,o]}class F extends m{constructor(r={}){let i=r.prefixes;delete r.prefixes,super(r),this._b_prefixes_open=!0,this._c_prefixes_tmp=0,this._kt_subject=null;let e=`<?xml version="1.0" encoding="utf-8"?>
<rdf:RDF
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"`;this._update_prefixes({rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#"}),i?this.push(e+this._serialize_prefixes(i)):this.push(e)}_serialize_prefixes(r,i=!1){if(!this._b_prefixes_open)return;let e=this._h_prefixes,u="";for(let t in r){if(t in e){if(r[t]===e[t]&&!i)continue;throw new Error(`Cannot change prefixes in RDF/XML serializer. Attempted to modify '${t}' from <${e[t]}> to <${r[t]}>`)}if($.test(t))throw new Error(`Cannot serialize prefix '${t}' since it is reserved under the blanket XML namespace.`);u+=`
	xmlns${t?":"+t:""}="${d(r[t]).value}"`}return u&&this._update_prefixes(r,!0),u}_serialize_c3r(r){let i="";this._b_prefixes_open&&(i+=">",this._b_prefixes_open=!1);let e=this._h_prefixes;this._kt_subject!==null&&(i+=`
	</rdf:Description>`,this._kt_subject=null);for(let u in r){let t="",s=p(u,e);if(!s.termType)continue;if(!s.isNamedNode&&!s.isBlankNode)throw new Error(`Cannot use ${s.termType} term type in subject position`);if(s.isNamedNode)t+=`

	<rdf:Description rdf:about="`+f(s.value)+'">';else if(s.isBlankNode)t+=`

	<rdf:Description rdf:nodeID="`+f(s.value)+'">';else throw new Error(`Not allowed to serialize term type '${s.termType}' as subject in XML serializer.`);let o=!1,n=r[u];for(let a in n){let _=p(a,e);if(!_.termType)continue;if(!_.isNamedNode)throw new Error(`Cannot use ${_.termType} term type in subject position`);let[C,j]=y(this,_),b="";for(let k of n[a]){let E=p(k,e);E.termType&&(b+=`
		`+w(this,C,j,E))}b&&(t+=b,o=!0)}o&&(i+=t+`
	</rdf:Description>`)}return i}_serialize_quad(r){let i=h.from.quad(r);this._b_prefixes_open&&(this._s_push+=">",this._b_prefixes_open=!1);let{subject:e,predicate:u,object:t}=i,[s,o]=y(this,u),n=`
		`+w(this,s,o,t);if(e.equals(this._kt_subject))this._s_push+=n;else{if(!e.isNamedNode&&!e.isBlankNode)throw new Error(`Cannot use ${e.termType} term type in subject position`);let a;if(e.isNamedNode)a=`

	<rdf:Description rdf:about="`+f(e.value)+'">'+n;else if(e.isBlankNode)a=`

	<rdf:Description rdf:nodeID="`+f(e.value)+'">'+n;else throw new Error(`Not allowed to serialize term type '${e.termType}' as subject in XML serializer.`);this._kt_subject?this._s_push+=`
	</rdf:Description>`+a:this._s_push+=a,this._kt_subject=e}}_flush(){F._flush_buffer(this),this._b_prefixes_open&&(this.push(">"),this._b_prefixes_open=!1),this._kt_subject?this.push(`
	</rdf:Description>
</rdf:RDF>
`):this.push(`
</rdf:RDF>
`),this.push(null)}}return Object.assign(F,{_serialize_comment:m.prototype._serialize_hash_comment}),D=function(c){return new F(c)},D}var g=q();const T=X(g),P=A({__proto__:null,default:T},[g]);export{P as m};

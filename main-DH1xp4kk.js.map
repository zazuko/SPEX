{"version":3,"file":"main-DH1xp4kk.js","sources":["../node_modules/@graphy/core.iso.stream/main.js"],"sourcesContent":["const stream = require('readable-stream');\n\n\n\nclass Readable extends stream.Readable {\n\tconstructor(gc_readable={}) {\n\t\tsuper(gc_readable);\n\n\t\t// use iterator\n\t\tif(gc_readable.iterator) {\n\t\t\tthrow new Error('readable stream iterator shortcut not yet implemented');\n\t\t}\n\t}\n\n\tuntil(s_event, b_return_stream) {\n\t\treturn new Promise((fk_until, fe_until) => {\n\t\t\t// convert error to rejected promise\n\t\t\tthis.on('error', (e_stream) => {\n\t\t\t\tfe_until(e_stream);\n\t\t\t});\n\n\t\t\t// special cases returns `this`\n\t\t\tif(b_return_stream) {\n\t\t\t\tthis.once(s_event, (...a_args) => {\n\t\t\t\t\tfk_until(this, ...a_args);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.once(s_event, fk_until);\n\t\t\t}\n\t\t});\n\t}\n\n\tbucket(s_encoding='utf8') {\n\t\tlet g_readable = this._readableState;\n\n\t\t// object mode\n\t\tif(g_readable.objectMode) {\n\t\t\t// async operation\n\t\t\treturn new Promise((fk_bucket, fe_bucket) => {\n\t\t\t\tlet a_data = [];\n\n\t\t\t\t// pipe to writable\n\t\t\t\tthis.pipe(new stream.Writable({\n\t\t\t\t\twrite(w_event, s_write_encoding, fk_write) {\n\t\t\t\t\t\ta_data.push(w_event);\n\t\t\t\t\t\tfk_write();\n\t\t\t\t\t},\n\n\t\t\t\t\twritev(a_chunks, fk_writev) {\n\t\t\t\t\t\ta_data.push(...a_chunks);\n\t\t\t\t\t\tfk_writev();\n\t\t\t\t\t},\n\t\t\t\t}))\n\t\t\t\t\t// error\n\t\t\t\t\t.on('error', (e_stream) => {\n\t\t\t\t\t\tfe_bucket(e_stream);\n\t\t\t\t\t})\n\t\t\t\t\t// wait for it to finish\n\t\t\t\t\t.on('finish', () => {\n\t\t\t\t\t\tfk_bucket(a_data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t// utf8-encoded strings\n\t\telse if('utf8' === s_encoding || 'utf-8' === s_encoding) {\n\t\t\t// async operation\n\t\t\treturn new Promise((fk_bucket, fe_bucket) => {\n\t\t\t\tlet s_data = '';\n\n\t\t\t\t// set encoding\n\t\t\t\tthis.setEncoding(s_encoding);\n\n\t\t\t\t// pipe to writable\n\t\t\t\tthis.pipe(new stream.Writable({\n\t\t\t\t\tdecodeStrings: false,\n\n\t\t\t\t\twrite(s_chunk, s_write_encoding, fk_write) {\n\t\t\t\t\t\ts_data += s_chunk;\n\t\t\t\t\t\tfk_write();\n\t\t\t\t\t},\n\n\t\t\t\t\twritev(a_chunks, fk_writev) {\n\t\t\t\t\t\ts_data += a_chunks.join('');\n\t\t\t\t\t\tfk_writev();\n\t\t\t\t\t},\n\t\t\t\t}))\n\t\t\t\t\t// error\n\t\t\t\t\t.on('error', (e_stream) => {\n\t\t\t\t\t\tfe_bucket(e_stream);\n\t\t\t\t\t})\n\t\t\t\t\t// wait for it to finish\n\t\t\t\t\t.on('finish', () => {\n\t\t\t\t\t\tfk_bucket(s_data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t// buffer\n\t\telse if('buffer' === s_encoding) {\n\t\t\t// async operation\n\t\t\treturn new Promise((fk_bucket, fe_bucket) => {\n\t\t\t\tlet ab_data = Buffer.from([]);\n\n\t\t\t\t// pipe to writable\n\t\t\t\tthis.pipe(new stream.Writable({\n\t\t\t\t\tdecodeStrings: true,\n\n\t\t\t\t\twrite(ab_chunk, s_write_encoding, fk_write) {\n\t\t\t\t\t\tab_data = Buffer.concat([ab_data, ab_chunk], ab_data.length+ab_chunk.length);\n\t\t\t\t\t\tfk_write();\n\t\t\t\t\t},\n\t\t\t\t}))\n\t\t\t\t\t// error\n\t\t\t\t\t.on('error', (e_stream) => {\n\t\t\t\t\t\tfe_bucket(e_stream);\n\t\t\t\t\t})\n\t\t\t\t\t// wait for it to finish\n\t\t\t\t\t.on('finish', () => {\n\t\t\t\t\t\tfk_bucket(ab_data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass Writable extends stream.Writable {\n\tuntil(s_event, b_return_stream) {\n\t\treturn new Promise((fk_until, fe_until) => {\n\t\t\t// convert error to rejected promise\n\t\t\tthis.on('error', (e_stream) => {\n\t\t\t\tfe_until(e_stream);\n\t\t\t});\n\n\t\t\t// special cases returns `this`\n\t\t\tif(b_return_stream) {\n\t\t\t\tthis.once(s_event, (...a_args) => {\n\t\t\t\t\tfk_until(this, ...a_args);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.once(s_event, fk_until);\n\t\t\t}\n\t\t});\n\t}\n\n\t// rdfjs impl\n\timport(ds_source) {\n\t\tds_source\n\t\t\t.on('data', w_chunk => this.write(w_chunk))\n\t\t\t.on('end', () => this.end())\n\t\t\t.on('error', e_read => this.emit('error', e_read));\n\n\t\treturn this;\n\t}\n}\n\nclass Duplex extends stream.Duplex {\n\tuntil(s_event, b_return_stream) {\n\t\treturn new Promise((fk_until, fe_until) => {\n\t\t\t// convert error to rejected promise\n\t\t\tthis.on('error', (e_stream) => {\n\t\t\t\tfe_until(e_stream);\n\t\t\t});\n\n\t\t\t// special cases returns `this`\n\t\t\tif(b_return_stream) {\n\t\t\t\tthis.once(s_event, (...a_args) => {\n\t\t\t\t\tfk_until(this, ...a_args);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.once(s_event, fk_until);\n\t\t\t}\n\t\t});\n\t}\n\n\tbucket(s_encoding='utf8') {\n\t\tlet g_readable = this._readableState;\n\n\t\t// object mode\n\t\tif(g_readable.objectMode) {\n\t\t\t// async operation\n\t\t\treturn new Promise((fk_bucket, fe_bucket) => {\n\t\t\t\tlet a_data = [];\n\n\t\t\t\t// pipe to writable\n\t\t\t\tthis.pipe(new stream.Writable({\n\t\t\t\t\twrite(w_event, s_write_encoding, fk_write) {\n\t\t\t\t\t\ta_data.push(w_event);\n\t\t\t\t\t\tfk_write();\n\t\t\t\t\t},\n\n\t\t\t\t\twritev(a_chunks, fk_writev) {\n\t\t\t\t\t\ta_data.push(...a_chunks);\n\t\t\t\t\t\tfk_writev();\n\t\t\t\t\t},\n\t\t\t\t}))\n\t\t\t\t\t// error\n\t\t\t\t\t.on('error', (e_stream) => {\n\t\t\t\t\t\tfe_bucket(e_stream);\n\t\t\t\t\t})\n\t\t\t\t\t// wait for it to finish\n\t\t\t\t\t.on('finish', () => {\n\t\t\t\t\t\tfk_bucket(a_data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t// utf8-encoded strings\n\t\telse if('utf8' === s_encoding || 'utf-8' === s_encoding) {\n\t\t\t// async operation\n\t\t\treturn new Promise((fk_bucket, fe_bucket) => {\n\t\t\t\tlet s_data = '';\n\n\t\t\t\t// set encoding\n\t\t\t\tthis.setEncoding(s_encoding);\n\n\t\t\t\t// pipe to writable\n\t\t\t\tthis.pipe(new stream.Writable({\n\t\t\t\t\tdecodeStrings: false,\n\n\t\t\t\t\twrite(s_chunk, s_write_encoding, fk_write) {\n\t\t\t\t\t\ts_data += s_chunk;\n\t\t\t\t\t\tfk_write();\n\t\t\t\t\t},\n\n\t\t\t\t\twritev(a_chunks, fk_writev) {\n\t\t\t\t\t\ts_data += a_chunks.join('');\n\t\t\t\t\t\tfk_writev();\n\t\t\t\t\t},\n\t\t\t\t}))\n\t\t\t\t\t// error\n\t\t\t\t\t.on('error', (e_stream) => {\n\t\t\t\t\t\tfe_bucket(e_stream);\n\t\t\t\t\t})\n\t\t\t\t\t// wait for it to finish\n\t\t\t\t\t.on('finish', () => {\n\t\t\t\t\t\tfk_bucket(s_data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t// buffer\n\t\telse if('buffer' === s_encoding) {\n\t\t\t// async operation\n\t\t\treturn new Promise((fk_bucket, fe_bucket) => {\n\t\t\t\tlet ab_data = Buffer.from([]);\n\n\t\t\t\t// pipe to writable\n\t\t\t\tthis.pipe(new stream.Writable({\n\t\t\t\t\tdecodeStrings: true,\n\n\t\t\t\t\twrite(ab_chunk, s_write_encoding, fk_write) {\n\t\t\t\t\t\tab_data = Buffer.concat([ab_data, ab_chunk], ab_data.length+ab_chunk.length);\n\t\t\t\t\t\tfk_write();\n\t\t\t\t\t},\n\t\t\t\t}))\n\t\t\t\t\t// error\n\t\t\t\t\t.on('error', (e_stream) => {\n\t\t\t\t\t\tfe_bucket(e_stream);\n\t\t\t\t\t})\n\t\t\t\t\t// wait for it to finish\n\t\t\t\t\t.on('finish', () => {\n\t\t\t\t\t\tfk_bucket(ab_data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass Transform extends stream.Transform {\n\tuntil(s_event, b_return_stream) {\n\t\treturn new Promise((fk_until, fe_until) => {\n\t\t\t// convert error to rejected promise\n\t\t\tthis.on('error', (e_stream) => {\n\t\t\t\tfe_until(e_stream);\n\t\t\t});\n\n\t\t\t// special cases returns `this`\n\t\t\tif(b_return_stream) {\n\t\t\t\tthis.once(s_event, (...a_args) => {\n\t\t\t\t\tfk_until(this, ...a_args);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.once(s_event, fk_until);\n\t\t\t}\n\t\t});\n\t}\n\n\tbucket(s_encoding='utf8') {\n\t\tlet g_readable = this._readableState;\n\n\t\t// object mode\n\t\tif(g_readable.objectMode) {\n\t\t\t// async operation\n\t\t\treturn new Promise((fk_bucket, fe_bucket) => {\n\t\t\t\tlet a_data = [];\n\n\t\t\t\t// pipe to writable\n\t\t\t\tthis.pipe(new stream.Writable({\n\t\t\t\t\twrite(w_event, s_write_encoding, fk_write) {\n\t\t\t\t\t\ta_data.push(w_event);\n\t\t\t\t\t\tfk_write();\n\t\t\t\t\t},\n\n\t\t\t\t\twritev(a_chunks, fk_writev) {\n\t\t\t\t\t\ta_data.push(...a_chunks);\n\t\t\t\t\t\tfk_writev();\n\t\t\t\t\t},\n\t\t\t\t}))\n\t\t\t\t\t// error\n\t\t\t\t\t.on('error', (e_stream) => {\n\t\t\t\t\t\tfe_bucket(e_stream);\n\t\t\t\t\t})\n\t\t\t\t\t// wait for it to finish\n\t\t\t\t\t.on('finish', () => {\n\t\t\t\t\t\tfk_bucket(a_data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t// utf8-encoded strings\n\t\telse if('utf8' === s_encoding || 'utf-8' === s_encoding) {\n\t\t\t// async operation\n\t\t\treturn new Promise((fk_bucket, fe_bucket) => {\n\t\t\t\tlet s_data = '';\n\n\t\t\t\t// set encoding\n\t\t\t\tthis.setEncoding(s_encoding);\n\n\t\t\t\t// pipe to writable\n\t\t\t\tthis.pipe(new stream.Writable({\n\t\t\t\t\tdecodeStrings: false,\n\n\t\t\t\t\twrite(s_chunk, s_write_encoding, fk_write) {\n\t\t\t\t\t\ts_data += s_chunk;\n\t\t\t\t\t\tfk_write();\n\t\t\t\t\t},\n\n\t\t\t\t\twritev(a_chunks, fk_writev) {\n\t\t\t\t\t\ts_data += a_chunks.join('');\n\t\t\t\t\t\tfk_writev();\n\t\t\t\t\t},\n\t\t\t\t}))\n\t\t\t\t\t// error\n\t\t\t\t\t.on('error', (e_stream) => {\n\t\t\t\t\t\tfe_bucket(e_stream);\n\t\t\t\t\t})\n\t\t\t\t\t// wait for it to finish\n\t\t\t\t\t.on('finish', () => {\n\t\t\t\t\t\tfk_bucket(s_data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t// buffer\n\t\telse if('buffer' === s_encoding) {\n\t\t\t// async operation\n\t\t\treturn new Promise((fk_bucket, fe_bucket) => {\n\t\t\t\tlet ab_data = Buffer.from([]);\n\n\t\t\t\t// pipe to writable\n\t\t\t\tthis.pipe(new stream.Writable({\n\t\t\t\t\tdecodeStrings: true,\n\n\t\t\t\t\twrite(ab_chunk, s_write_encoding, fk_write) {\n\t\t\t\t\t\tab_data = Buffer.concat([ab_data, ab_chunk], ab_data.length+ab_chunk.length);\n\t\t\t\t\t\tfk_write();\n\t\t\t\t\t},\n\t\t\t\t}))\n\t\t\t\t\t// error\n\t\t\t\t\t.on('error', (e_stream) => {\n\t\t\t\t\t\tfe_bucket(e_stream);\n\t\t\t\t\t})\n\t\t\t\t\t// wait for it to finish\n\t\t\t\t\t.on('finish', () => {\n\t\t\t\t\t\tfk_bucket(ab_data);\n\t\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t// rdfjs impl\n\timport(ds_source) {\n\t\tds_source\n\t\t\t.on('data', w_chunk => this.write(w_chunk))\n\t\t\t.on('end', () => this.end())\n\t\t\t.on('error', e_read => this.emit('error', e_read));\n\n\t\treturn this;\n\t}\n\n\tdemolish(e_destroy) {\n\t\t// do not allow to push\n\t\tthis.push = (z_chunk) => {\n\t\t\t// ignore eof signals from node core\n\t\t\tif(null === z_chunk) return;\n\n\t\t\t// anything else is bad\n\t\t\tthrow new Error(`[ERR_STREAM_DESTROYED]: Cannot push after stream was destroyed`);\n\t\t};\n\n\t\t// do not allow to emit 'end'\n\t\tthis.emit = function(s_event, ...a_args) {\n\t\t\tif('end' === s_event) return;\n\n\t\t\tObject.getPrototypeOf(this).emit.apply(this, [s_event, ...a_args]);\n\t\t};\n\n\t\t// an error was given, destroy the stream as well\n\t\tif(e_destroy) {\n\t\t\treturn stream.Transform.prototype.destroy.call(this, e_destroy);\n\t\t}\n\t}\n}\n\n// eslint-disable-next-line no-new-func\nconst b_is_node = (new Function(/* syntax: js */ `try {return this===global;}catch(e){return false;}`))();\n\n// deduce the runtime environment\nconst [B_BROWSER, B_BROWSERIFY] = (() => 'undefined' === typeof process\n\t? [true, false]\n\t: (process.browser\n\t\t? [true, true]\n\t\t: ('undefined' === process.versions || 'undefined' === process.versions.node\n\t\t\t? [true, false]\n\t\t\t: [false, false])))();\n\n// node.js or browserify; patch for node < v10\nif(B_BROWSERIFY || (b_is_node && (+(/^v(\\d+)/.exec(process.version)[1])) < 10)) {\n\t// override destroy methods\n\tTransform.prototype.destroy = Duplex.prototype.destroy = function(e_destroy, fke_destroy) {\n\t\tthis._readableState.destroyed = true;\n\t\tthis._writableState.destroyed = true;\n\n\t\tlet f_emit_close = () => {\n\t\t\tif(!this._writableState.emitClose) return;\n\t\t\tif(!this._readableState.emitClose) return;\n\t\t\tthis.emit('close');\n\t\t};\n\n\t\tthis._destroy(e_destroy || null, (e_destroy_re) => {\n\t\t\tif(!fke_destroy && e_destroy_re) {\n\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\tthis.emit('error', e_destroy_re);\n\t\t\t\t\tf_emit_close();\n\t\t\t\t});\n\t\t\t\tthis._writableState.errorEmitted = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprocess.nextTick(f_emit_close);\n\t\t\t\tif(fke_destroy) fke_destroy(e_destroy_re);\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t};\n\n\t// override default _destroy implementations\n\tTransform.prototype._destroy = Duplex.prototype._destroy = (e_destroy, fke_destroy) => fke_destroy(e_destroy);\n}\n\nclass QuadsToOther extends Transform {\n\tconstructor(gc_transform={}) {\n\t\tsuper({\n\t\t\t...gc_transform,\n\t\t\twritableObjectMode: true,\n\t\t\treadableObjectMode: true,\n\t\t});\n\n\t\tthis._as_inputs = new Set();\n\n\t\t// forward prefix and comment events\n\t\tthis.on('pipe', (ds_src) => {\n\t\t\tthis._as_inputs.add(ds_src);\n\n\t\t\tds_src\n\t\t\t\t.on('prefix', (...a_args) => {\n\t\t\t\t\tthis.emit('prefix', ...a_args);\n\t\t\t\t})\n\t\t\t\t.on('comment', (...a_args) => {\n\t\t\t\t\tthis.emit('comment', ...a_args);\n\t\t\t\t});\n\t\t});\n\n\t\tthis.on('unpipe', (ds_src) => {\n\t\t\tthis._as_inputs.delete(ds_src);\n\t\t});\n\t}\n\n\t_destroy() {\n\t\tfor(let ds_input of this._as_inputs) {\n\t\t\tds_input.destroy();\n\t\t}\n\t}\n}\n\nclass Quads_To_JSON_Transform extends QuadsToOther {\n\t// serializse json\n\t_transform(g_quad, s_encoding, fk_transform) {\n\t\tfk_transform(null, JSON.stringify(g_quad.isolate())+'\\n');\n\t}\n}\n\nclass Quads_To_Writable extends QuadsToOther {\n\t_transform(g_quad, s_encoding, fk_transform) {\n\t\tfk_transform(null, {\n\t\t\ttype: 'quad',\n\t\t\tvalue: g_quad,\n\t\t});\n\t}\n}\n\nTransform.QuadsToOther = QuadsToOther;\n\nmodule.exports = {\n\t...stream,\n\tReadable,\n\tWritable,\n\tDuplex,\n\tTransform,\n\n\tQuadsToOther,\n\n\t// create a transform from quad objects into JSON strings for trivial serialization\n\tquads_to_json() {\n\t\treturn new Quads_To_JSON_Transform();\n\t},\n\n\t// create a transform from quad objects into writable data events\n\tquads_to_writable() {\n\t\treturn new Quads_To_Writable();\n\t},\n\n\t// create a simple, single-event readable stream\n\tsource(w_push, s_encoding=null) {\n\t\t// encoding not explicit, string given; assume utf8\n\t\tif(!s_encoding && 'string' === typeof w_push) s_encoding = 'utf8';\n\n\t\t// readable\n\t\treturn new Readable({\n\t\t\tobjectMode: !s_encoding && 'string' !== typeof w_push && !Buffer.isBuffer(w_push),\n\n\t\t\tread() {\n\t\t\t\tthis.push(w_push, s_encoding);\n\t\t\t\tthis.push(null);\n\t\t\t},\n\t\t});\n\t},\n};\n"],"names":["stream","require$$0","Readable","gc_readable","s_event","b_return_stream","fk_until","fe_until","e_stream","a_args","s_encoding","fk_bucket","fe_bucket","a_data","w_event","s_write_encoding","fk_write","a_chunks","fk_writev","s_data","s_chunk","ab_data","Buffer","ab_chunk","Writable","ds_source","w_chunk","e_read","Duplex","Transform","e_destroy","z_chunk","b_is_node","B_BROWSER","B_BROWSERIFY","process","fke_destroy","f_emit_close","e_destroy_re","QuadsToOther","gc_transform","ds_src","ds_input","Quads_To_JSON_Transform","g_quad","fk_transform","Quads_To_Writable","main","w_push"],"mappings":"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","x_google_ignoreList":[0]}